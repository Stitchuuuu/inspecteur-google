- group: main
  name: build
  desc: Compile main code (nodejs)
  cmd: NODE_ENV=production node ../../node_modules/webpack/bin/webpack.js
  cwd: ./src/main

- group: main
  name: dev
  desc: Watch for changes & recompile code for main
  cmd: node ../../node_modules/webpack/bin/webpack.js --watch
  cwd: ./src/main

- group: renderer
  name: dev
  desc: Watch for changes & recompile renderer code (web + vuejs)
  cmd: npm run serve
  cwd: ./src/renderer

- group: renderer
  name: build
  desc: Compile renderer code (web + vuejs)
  cmd: npm run build
  cwd: ./src/renderer

- name: build
  desc: Compile the renderer & the main
  cmd: |
    wtf main build
    wtf renderer build

- group: make
  name: mac
  desc: Compile + create the installer for Mac platform
  cmd: |
    wtf build
    wtf icon
    npm run make:macos
    npm run make:macos-m1

- group: make
  name: win
  desc: Compile + create the installer for Windows
  cmd: |
    wtf build
    wtf icon
    npm run make:window

- name: icon
  desc: Create icon needed by the app from sources
  cmd: |
    convert src/assets/ico/32.png src/assets/ico/64.png src/assets/ico/128.png src/assets/ico/256.png src/assets/ico/512.png src/assets/ico/1024.png assets/icon.ico
    iconutil -c icns src/assets/rounded-icon.iconset --output assets/icon.icns
    cp src/assets/ico/1024.png assets/icon.png
    cp src/assets/rounded-icon.iconset/icon_512x512@2x.png assets/rounded-icon.png

- name: start
  desc: Start the app in dev mode
  cmd: npm run start{{ if .production }}:production{{ end }}
  flags:
    - name: [production, p]
      desc: Start the app in production mode
      test: $bool
      default: false
  